/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/routines/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getRoutine"];
        put: operations["updateRoutine"];
        post?: never;
        delete: operations["deleteRoutine"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/exercises/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: operations["updateExercise"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/workouts/complete": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["completeWorkout"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/routines": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getRoutines"];
        put?: never;
        post: operations["createRoutine"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/exercises": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 운동 목록 조회
         * @description 전체 운동 목록을 조회
         */
        get: operations["getExercises"];
        put?: never;
        post: operations["saveExercise"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/reissue": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 토큰 재발급
         * @description RefreshToken을 사용해 새로운 AccessToken을 발급
         */
        post: operations["reissue"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["register"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 로그아웃
         * @description 서버에서 RefreshToken을 삭제
         */
        post: operations["logout"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 로그인
         * @description 전화번호/비밀번호로 로그인
         */
        post: operations["login"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        SaveRoutineDto: {
            /** Format: int64 */
            id?: number;
            name?: string;
            description?: string;
            exerciseIds?: number[];
        };
        ApiResponseSaveRoutineDto: {
            status?: string;
            message?: string;
            data?: components["schemas"]["SaveRoutineDto"];
            error?: string;
        };
        ApiResponseInteger: {
            status?: string;
            message?: string;
            /** Format: int32 */
            data?: number;
            error?: string;
        };
        ExerciseDto: {
            /** Format: int64 */
            id?: number;
            name?: string;
            description?: string;
            /** Format: int32 */
            orderIdx?: number;
            muscleCategories?: components["schemas"]["MuscleCategoryDto"][];
        };
        ExerciseRecordDto: {
            exercise?: components["schemas"]["ExerciseDto"];
            sets?: components["schemas"]["SetRecordDto"][];
            /** Format: int64 */
            id?: number;
        };
        MuscleCategoryDto: {
            /** Format: int64 */
            id?: number;
            name?: string;
            description?: string;
            parent?: components["schemas"]["MuscleCategoryDto"];
        };
        QuickWorkoutCompleteDto: {
            exerciseRecords?: components["schemas"]["ExerciseRecordDto"][];
            /** @enum {string} */
            workoutMod?: "QUICK" | "ROUTINE";
            isSave?: boolean;
        };
        SetRecordDto: {
            /** Format: int64 */
            id?: number;
            /** Format: int32 */
            setNumber?: number;
            /** Format: double */
            weight?: number;
            /** Format: int32 */
            reps?: number;
        };
        ApiResponseString: {
            status?: string;
            message?: string;
            data?: string;
            error?: string;
        };
        ExerciseListDto: {
            /** Format: int64 */
            id?: number;
            name?: string;
            description?: string;
            muscleCategories?: string;
        };
        ApiResponseExerciseListDto: {
            status?: string;
            message?: string;
            data?: components["schemas"]["ExerciseListDto"];
            error?: string;
        };
        ApiResponseTokenDto: {
            status?: string;
            message?: string;
            data?: components["schemas"]["TokenDto"];
            error?: string;
        };
        MemberInfo: {
            /** Format: int64 */
            id?: number;
            phoneNumber?: string;
            name?: string;
            nickName?: string;
            /** @enum {string} */
            gender?: "MALE" | "FEMALE";
            /** Format: double */
            height?: number;
            /** Format: double */
            weight?: number;
            /** Format: int32 */
            goalCalories?: number;
        };
        TokenDto: {
            grantType?: string;
            accessToken?: string;
            refreshToken?: string;
            /** Format: int64 */
            accessTokenExpiresIn?: number;
            memberInfo?: components["schemas"]["MemberInfo"];
        };
        RegisterRequestDto: {
            phoneNumber: string;
            password: string;
            name?: string;
            nickName?: string;
            /** @enum {string} */
            gender?: "MALE" | "FEMALE";
            /** Format: double */
            height?: number;
            /** Format: double */
            weight?: number;
            /** Format: int32 */
            goalCalories?: number;
        };
        LoginRequestDto: {
            memberName?: string;
            password?: string;
        };
        ApiResponseListRoutineDto: {
            status?: string;
            message?: string;
            data?: components["schemas"]["RoutineDto"][];
            error?: string;
        };
        RoutineDto: {
            name?: string;
            description?: string;
            exerciseIds?: number[];
            /** Format: int32 */
            order?: number;
        };
        ApiResponseListExerciseListDto: {
            status?: string;
            message?: string;
            data?: components["schemas"]["ExerciseListDto"][];
            error?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getRoutine: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseSaveRoutineDto"];
                };
            };
        };
    };
    updateRoutine: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SaveRoutineDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseSaveRoutineDto"];
                };
            };
        };
    };
    deleteRoutine: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseString"];
                };
            };
        };
    };
    updateExercise: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseInteger"];
                };
            };
        };
    };
    completeWorkout: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["QuickWorkoutCompleteDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseString"];
                };
            };
        };
    };
    getRoutines: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseListRoutineDto"];
                };
            };
        };
    };
    createRoutine: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SaveRoutineDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseSaveRoutineDto"];
                };
            };
        };
    };
    getExercises: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseListExerciseListDto"];
                };
            };
        };
    };
    saveExercise: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ExerciseListDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseExerciseListDto"];
                };
            };
        };
    };
    reissue: {
        parameters: {
            query?: never;
            header: {
                Authorization: string;
                "Refresh-Token": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseTokenDto"];
                };
            };
        };
    };
    register: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RegisterRequestDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
        };
    };
    logout: {
        parameters: {
            query?: never;
            header: {
                Authorization: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseString"];
                };
            };
        };
    };
    login: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoginRequestDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseTokenDto"];
                };
            };
        };
    };
}
